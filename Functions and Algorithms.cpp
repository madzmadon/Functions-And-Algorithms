//Madison Evans
//Program a Lottery Game for the computer science club

#include <iostream>
#include <iomanip>
#include <string>
#include <fstream>

using namespace std;

const int AMOUNT_OF_LOTTERY_NUMBERS = 7;
const int RANGE_MIN = 1;
const int RANGE_MAX = 50;
const double SEVEN_GUESS_WINNER_AMOUNT = 20.00;
const double SIX_GUESS_WINNER_AMOUNT = 10.00;
const double FIVE_GUESS_WINNER_AMOUNT = 5.00;
const double LOSS_AMOUNT = 0.00;
const int MAX_NUMBER_OF_STUDENTS = 50;

//Create a structure to save student information and guesses
struct studentRegistrationInformation
{
    int id_number;
    string full_name;
    int guess1;
    int guess2;
    int guess3;
    int guess4;
    int guess5;
    int guess6;
    int guess7;
    int matches;
    double prize_money;
};

void studentRegistration(int&, studentRegistrationInformation student_info[MAX_NUMBER_OF_STUDENTS]);
void determineWinners(int students, studentRegistrationInformation student_info[MAX_NUMBER_OF_STUDENTS], int winningNumbers[AMOUNT_OF_LOTTERY_NUMBERS]);
void resultsReport(int students, studentRegistrationInformation student_info[MAX_NUMBER_OF_STUDENTS]);
void winningsReport(int students, studentRegistrationInformation student_info[MAX_NUMBER_OF_STUDENTS]);

int main()
{
    studentRegistrationInformation student_info[MAX_NUMBER_OF_STUDENTS];
    int winningNumbers[AMOUNT_OF_LOTTERY_NUMBERS];
    int students;
    
    studentRegistration(students, student_info);
    determineWinners(students, student_info, winningNumbers);
    resultsReport(students, student_info);
    winningsReport(students, student_info);
    
}

/*
 The system will read the students’ ID number (an integer), full name (name will be the format: last name, first
 name), and the students’ 7 different number choices from an input file provided. Allow the program to read the
 information from the file for up to 50 students. The user is NOT allowed to enter the number of students
 because they do not know how many are in the file. This information will be displayed in the Results Report
 as illustrated in the Sample Input/Output section.
 */
void studentRegistration(int& students, studentRegistrationInformation student_info[MAX_NUMBER_OF_STUDENTS])
{
    //insert a file to input student guesses
    ifstream inFile;
    
    int i = 0;
    inFile.open("guesses2.txt");

    if (!inFile)
        cout << "\n\n**** ERROR OPENING FILE. ******\n" << endl;
    else
    {
        while (!inFile.eof())
        {
            inFile >> student_info[i].id_number;
            getline(inFile, student_info[i].full_name);
            inFile >> student_info[i].guess1;
            inFile >> student_info[i].guess2;
            inFile >> student_info[i].guess3;
            inFile >> student_info[i].guess4;
            inFile >> student_info[i].guess5;
            inFile >> student_info[i].guess6;
            inFile >> student_info[i].guess7;
            i++;
        }
    }
    inFile.close();
    
    students = i-1;
}

/*
 The user enters the 7 random numbers generated by the Lottery Machine (use the numbers listed the Sample
 Input/Output). The winners are determined as follows: If a student’s number choices match all 7 of the random
 numbers selected by the Lottery Machine (they do not have to match in order), then they win $20.00. If the
 student matches 6 of the 7 random numbers, they win $10.00. If the student matches 5 of the 7 lottery numbers,
 they win $5.00. All information is to be displayed in the Results Report as illustrated in the Sample
 Input/Output section
 */
void determineWinners(int students, studentRegistrationInformation student_info[MAX_NUMBER_OF_STUDENTS], int winningNumbers[AMOUNT_OF_LOTTERY_NUMBERS])
{
    //Input lottery winner numbers
    cout << "Enter the 7 different, random numbers between 1 and 50 that were selected.";
    
    for (int i = 0; i < AMOUNT_OF_LOTTERY_NUMBERS; i++)
    {
        do
        {
        cout << "\n\nNumber " << i + 1<< ": ";
        cin >> winningNumbers[i];
        }while (winningNumbers[i] < RANGE_MIN || winningNumbers[i] > RANGE_MAX);
    }
    
    //calculate the number of matches for each student
    for(int i = 0; i < students; i++)
    {
        student_info[i].matches = 0;
        for(int j = 0; j < AMOUNT_OF_LOTTERY_NUMBERS; j++)
        {
            if(student_info[i].guess1 == winningNumbers[j])
            {
                student_info[i].matches++;
            }
            if(student_info[i].guess2 == winningNumbers[j])
            {
                student_info[i].matches++;
            }
            if(student_info[i].guess3 == winningNumbers[j])
            {
                student_info[i].matches++;
            }
            if(student_info[i].guess4 == winningNumbers[j])
            {
                student_info[i].matches++;
            }
            if(student_info[i].guess5 == winningNumbers[j])
            {
                student_info[i].matches++;
            }
            if(student_info[i].guess6 == winningNumbers[j])
            {
                student_info[i].matches++;
            }
            if(student_info[i].guess7 == winningNumbers[j])
            {
                student_info[i].matches++;
            }
        }
    }
    //calculate the price money for each student
    for(int i = 0; i < students; i++)
    {
        if(student_info[i].matches == 7)
        {
            student_info[i].prize_money = SEVEN_GUESS_WINNER_AMOUNT;
        }
        if(student_info[i].matches == 6)
        {
            student_info[i].prize_money = SIX_GUESS_WINNER_AMOUNT;
        }
        if(student_info[i].matches == 5)
        {
            student_info[i].prize_money = FIVE_GUESS_WINNER_AMOUNT;
        }
        if(student_info[i].matches < 5)
        {
            student_info[i].prize_money = LOSS_AMOUNT;
        }
    }
}

/*
 The Results Report will be sorted in ascending order by name, displaying all the students’ information
 including the number of matches and prize money won. (See the sample Results Report in the Sample
 Input/Output section.)
 */
void resultsReport(int students, studentRegistrationInformation student_info[MAX_NUMBER_OF_STUDENTS])
{
    //sort winners
    int i, j;
    studentRegistrationInformation temp;
        for(i = 0; i < (students - 1); i++)
        {
            for(j = 1; j < students; j++)
            {
                if(student_info[j].full_name < student_info[j-1].full_name)
                {
                    temp = student_info[j];
                    student_info[j] = student_info[j - 1];
                    student_info[j - 1] = temp;
                }
            }
        }
    //Display all student info
    cout << endl << endl
    << "************************Results Report*************************************\n"
    << "Student ID     Student Name        Chosen Numbers      Matches     Prize $ \n"
    << "___________________________________________________________________________\n";
    for (int i = 0; i < students; i++)
    {
        cout << left;
        cout << setw(5) << student_info[i].id_number;
        cout << setw(15) << student_info[i].full_name;
        cout << right;
        cout << setw(6) << student_info[i].guess1;
        cout << setw(6) << student_info[i].guess2;
        cout << setw(6) << student_info[i].guess3;
        cout << setw(6) << student_info[i].guess4;
        cout << setw(6) << student_info[i].guess5;
        cout << setw(6) << student_info[i].guess6;
        cout << setw(6) << student_info[i].guess7;
        cout << setw(6) << student_info[i].matches;
        cout << setprecision(2) << showpoint << fixed;
        cout << setw(6) << student_info[i].prize_money;
        cout << endl;
    }
    cout << endl << endl << endl;
}

/*
 Three separate reports will be produced, sorted in ascending order by name, and grouped in the following
 categories:
 a) Students who matched all 7 lottery numbers;
 b) Students who matched 6 lottery numbers;
 c) Students who matched 5 lottery numbers.
 (See the sample Winnings Report in the Sample Input/Output section.)
 */
void winningsReport(int students, studentRegistrationInformation student_info[MAX_NUMBER_OF_STUDENTS])
{
    //display winners
    cout << endl << endl
    << "*****************Winnings Report************************\n\n"
    << "**********Students Who Matched All 7 Numbers************\n"
    << "Student ID     Student Name         Matches     Prize $ \n"
    << "________________________________________________________\n";
    for(int i = 0; i < students; i++)
    {
        if(student_info[i].prize_money == SEVEN_GUESS_WINNER_AMOUNT)
        {
            cout << setw(5) << student_info[i].id_number;
            cout << setw(15) << student_info[i].full_name;
            cout << right;
            cout << setw(6) << student_info[i].matches;
            cout << setprecision(2) << showpoint << fixed;
            cout << setw(6) << student_info[i].prize_money;
            cout << endl << endl;
        }
    }
    
    cout << "************Students Who Matched 6 Numbers**************\n"
    << "Student ID     Student Name         Matches     Prize $ \n"
    << "________________________________________________________\n";
    for(int i = 0; i < students; i++)
    {
        if(student_info[i].prize_money == SIX_GUESS_WINNER_AMOUNT)
        {
            cout << setw(5) << student_info[i].id_number;
            cout << setw(15) << student_info[i].full_name;
            cout << right;
            cout << setw(6) << student_info[i].matches;
            cout << setprecision(2) << showpoint << fixed;
            cout << setw(6) << student_info[i].prize_money;
            cout << endl << endl;
        }
    }
    
    cout  << "************Students Who Matched 5 Numbers**************\n"
    << "Student ID     Student Name         Matches     Prize $ \n"
    << "________________________________________________________\n";
    for(int i = 0; i < students; i++)
    {
        if(student_info[i].prize_money == FIVE_GUESS_WINNER_AMOUNT)
        {
            cout << setw(5) << student_info[i].id_number;
            cout << setw(15) << student_info[i].full_name;
            cout << right;
            cout << setw(6) << student_info[i].matches;
            cout << setprecision(2) << showpoint << fixed;
            cout << setw(6) << student_info[i].prize_money;
            cout << endl << endl;
        }
    }
    
    
}
